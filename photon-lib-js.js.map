{"mappings":"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","sources":["src/photon-lib-js.ts","src/ipc.ts"],"sourcesContent":["import ipc from \"./ipc\";\n\nexport { ipc };\n","function ipcInit() {\n  const socket = new WebSocket(\"ws://127.0.0.1:53174/ipc\");\n\n  socket.addEventListener(\"open\", () => {\n    socket.addEventListener(\"message\", (e) => {\n      const data = JSON.parse(e.data);\n      ipc.onEvents.get(data.event)?.forEach((callback) => {\n        callback(data.payload);\n      });\n      ipc.onceEvents.get(data.event)?.forEach((callback) => {\n        callback(data.payload);\n        ipc.onceEvents.delete(data.event);\n      });\n    });\n  });\n\n  socket.addEventListener(\"close\", () => {\n    console.error(\n      \"IPC connection terminated. Attempting to re-establish connection...\"\n    );\n    setTimeout(() => {\n      const ipc = ipcInit();\n      ipc.on(\"open\", () => location.reload());\n    }, 1000);\n  });\n\n  const ipc = {\n    on: (event, callback) => {\n      switch (event) {\n        case \"open\":\n        case \"close\":\n        case \"error\":\n          return socket.addEventListener(event, callback);\n        default:\n          return ipc.registerEvent(event, callback, \"on\");\n      }\n    },\n    once: (event, callback) => {\n      return ipc.registerEvent(event, callback, \"once\");\n    },\n    registerEvent: (event, callback, type) => {\n      const eventsMap = ipc[`${type}Events`];\n      if (!eventsMap.has(event)) {\n        eventsMap.set(event, []);\n      }\n\n      const eventArray = eventsMap.get(event);\n      eventArray.push(callback);\n\n      return () => {\n        const index = eventArray.indexOf(callback);\n        if (index > -1) {\n          eventArray.splice(index, 1);\n        }\n\n        if (eventArray.length === 0) eventsMap.delete(event);\n      };\n    },\n    emit: (event, payload) => {\n      socket.send(JSON.stringify({ event, payload }));\n    },\n    onEvents: new Map(),\n    onceEvents: new Map(),\n  };\n\n  return ipc;\n}\n\nconst ipc = ipcInit();\n\nexport default ipc;\n"],"names":[],"version":3,"file":"photon-lib-js.js.map"}